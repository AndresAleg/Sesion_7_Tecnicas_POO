package gestordecitas.pantallas;

import gestordecitas.GestorDeCitas;
import gestordecitas.entidades.Especialidad;
import gestordecitas.entidades.Medico;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Estudiante
 */
public class JFrameEditarMedico extends javax.swing.JFrame {

    private DefaultListModel<String> modelListEspecialidadesShow;
    private List<Especialidad> especialidad = new ArrayList<>();
    private JFrame padre;
    /**
     * Creates new form JFrameMedicos
     * @param padre
     */
    public JFrameEditarMedico(JFrame padre) {
        initComponents();
        this.padre = padre;
        inicializarFormulario();
    }
    
    public final void inicializarFormulario() {
        
        List<Especialidad> listaEspecialidades = new ArrayList<Especialidad>() {
            {
                add(new Especialidad() {{
                        setNombre("Medicina interna");
                }});
                add(new Especialidad() {{
                        setNombre("Pediatría");
                }});
                add(new Especialidad() {{
                        setNombre("Ginecología");
                }});
                add(new Especialidad() {{
                        setNombre("Dermatología");
                }});
                add(new Especialidad() {{
                        setNombre("Cardiología");
                }});
                add(new Especialidad() {{
                        setNombre("Neurología");
                }});
                add(new Especialidad() {{
                        setNombre("Psiquiatría");
                }});                
            }    
        };
        
        modelListEspecialidadesShow = new DefaultListModel<>();
        this.lstEspecialidades.setModel(modelListEspecialidadesShow);
        modelListEspecialidadesShow.removeAllElements();
        
        for (Especialidad especialidad : listaEspecialidades) {
            modelListEspecialidadesShow.addElement(especialidad.getNombre());
        }
    }
    
    private Boolean buscarEspecialidad(String nombreEspecialidad) {
        for (Especialidad especialidad : especialidad) {
            if (especialidad.getNombre().equals(nombreEspecialidad)) {
                return true;
            }
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCMP = new javax.swing.JTextField();
        lblTitulo = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblCMP = new javax.swing.JLabel();
        lblEspecialidades = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstEspecialidades = new javax.swing.JList<>();
        btnDisminuir = new javax.swing.JButton();
        btnAdicionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editar Medico");

        lblTitulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTitulo.setText("Editar Medico");

        lblNombre.setText("Nombre:");

        lblCMP.setText("CMP");

        lblEspecialidades.setText("Especialidades:");

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        lstEspecialidades.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstEspecialidades);

        btnDisminuir.setText("-");
        btnDisminuir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisminuirActionPerformed(evt);
            }
        });

        btnAdicionar.setText("+");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitulo)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNombre)
                                    .addComponent(lblCMP))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCMP)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblEspecialidades)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(btnSalir)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnDisminuir)
                                .addGap(18, 18, 18)
                                .addComponent(btnAdicionar))
                            .addComponent(btnGuardar))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblTitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCMP))
                .addGap(32, 32, 32)
                .addComponent(lblEspecialidades)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDisminuir)
                    .addComponent(btnAdicionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir)
                    .addComponent(btnGuardar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        padre.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        
        if (!txtCMP.getText().isEmpty() && 
                !txtNombre.getText().isEmpty() && 
                !especialidad.isEmpty()) {
            
            Medico medico = new Medico();
        
            medico.setCMP(txtCMP.getText());
            medico.setNombre(txtNombre.getText());
            medico.setEspecialidades(especialidad);

            GestorDeCitas.listaMedicos.add(medico);
            ((JFrameMedicos)padre).inicializarFormulario();

            padre.setVisible(true);
            this.dispose();
        }
        else {
            JOptionPane.showMessageDialog(this, "Selecciona al menos 1 especialidad para el medico y completa los campos.");
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        
        int selectedIndex = lstEspecialidades.getSelectedIndex();
        
        if (selectedIndex != -1) {
            Especialidad especialidadSeleccionada = new Especialidad();
            especialidadSeleccionada.setNombre(lstEspecialidades.getSelectedValue());
            
            if (!buscarEspecialidad(especialidadSeleccionada.getNombre())) {
                especialidad.add(especialidadSeleccionada);
            }
            else {
                JOptionPane.showMessageDialog(this, "La especialidad seleccionada ya esta añadida.");
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una especialidad.");
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnDisminuirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisminuirActionPerformed
        int selectedIndex = lstEspecialidades.getSelectedIndex();
        
        if (selectedIndex != -1) {
            
            Especialidad especialidadSeleccionada = new Especialidad();
            especialidadSeleccionada.setNombre(lstEspecialidades.getSelectedValue());
            
            if (buscarEspecialidad(especialidadSeleccionada.getNombre())) {
                especialidad.remove(especialidadSeleccionada);
            }
            else{
                JOptionPane.showMessageDialog(this, "La especialidad seleccionada no se encontro");
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una especialidad.");
        }
    }//GEN-LAST:event_btnDisminuirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameEditarMedico(new JFrame()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnDisminuir;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCMP;
    private javax.swing.JLabel lblEspecialidades;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JList<String> lstEspecialidades;
    private javax.swing.JTextField txtCMP;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
